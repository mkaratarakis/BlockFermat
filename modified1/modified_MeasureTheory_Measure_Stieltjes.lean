def id : StieltjesFunction where
  toFun := id
  mono' _ _ := id
  right_continuous' _ := continuousWithinAt_id
#align stieltjes_function.id StieltjesFunction.id

def _root_.Monotone.stieltjesFunction {f : ‚Ñù ‚Üí ‚Ñù} (hf : Monotone f) :
    StieltjesFunction where
  toFun := rightLim f
  mono' x y hxy := hf.rightLim hxy
  right_continuous' := by
    intro x s hs
    obtain ‚ü®l, u, hlu, lus‚ü© : ‚àÉ l u : ‚Ñù, rightLim f x ‚àà Ioo l u ‚àß Ioo l u ‚äÜ s :=
      mem_nhds_iff_exists_Ioo_subset.1 hs
    obtain ‚ü®y, xy, h'y‚ü© : ‚àÉ (y : ‚Ñù), x < y ‚àß Ioc x y ‚äÜ f ‚Åª¬π' Ioo l u :=
      mem_nhdsWithin_Ioi_iff_exists_Ioc_subset.1 (hf.tendsto_rightLim x (Ioo_mem_nhds hlu.1 hlu.2))
    change ‚àÄ·∂† y in ùìù[‚â•] x, rightLim f y ‚àà s
    filter_upwards [Ico_mem_nhdsWithin_Ici ‚ü®le_refl x, xy‚ü©] with z hz
    apply lus
    refine' ‚ü®hlu.1.trans_le (hf.rightLim hz.1), _‚ü©
    obtain ‚ü®a, za, ay‚ü© : ‚àÉ a : ‚Ñù, z < a ‚àß a < y := exists_between hz.2
    calc
      rightLim f z ‚â§ f a := hf.rightLim_le za
      _ < u := (h'y ‚ü®hz.1.trans_lt za, ay.le‚ü©).2
#align monotone.stieltjes_function Monotone.stieltjesFunction

def length (s : Set ‚Ñù) : ‚Ñù‚â•0‚àû :=
  ‚®Ö (a) (b) (_ : s ‚äÜ Ioc a b), ofReal (f b - f a)
#align stieltjes_function.length StieltjesFunction.length

def outer : OuterMeasure ‚Ñù :=
  OuterMeasure.ofFunction f.length f.length_empty
#align stieltjes_function.outer StieltjesFunction.outer

def measure : Measure ‚Ñù :=
  { toOuterMeasure := f.outer
    m_iUnion := fun _s hs =>
      f.outer.iUnion_eq_of_caratheodory fun i => f.borel_le_measurable _ (hs i)
    trimmed := f.outer_trim }
#align stieltjes_function.measure StieltjesFunction.measure

structure containing a function from `‚Ñù ‚Üí ‚Ñù`, together with the
assertions that it is monotone and right-continuous. To `f : StieltjesFunction`, one associates
a Borel measure `f.measure`.
* `f.measure_Ioc` asserts that `f.measure (Ioc a b) = ofReal (f b - f a)`
* `f.measure_Ioo` asserts that `f.measure (Ioo a b) = ofReal (leftLim f b - f a)`.
* `f.measure_Icc` and `f.measure_Ico` are analogous.
-/

noncomputable section

open scoped Classical
open Set Filter Function BigOperators ENNReal NNReal Topology MeasureTheory

open ENNReal (ofReal)


/-! ### Basic properties of Stieltjes functions -/

structure StieltjesFunction where
  toFun : ‚Ñù ‚Üí ‚Ñù
  mono' : Monotone toFun
  right_continuous' : ‚àÄ x, ContinuousWithinAt toFun (Ici x) x
#align stieltjes_function StieltjesFunction